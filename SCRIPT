-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
-- monkey
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

Rayfield:Notify({
   Title = " < üôà Monkey Hub üçå >",
   Content = "Thank you For usein Monkey Hub!  ",
   Duration = 6.5,
   Image = 4275313596,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Alright!!!",
         Callback = function()
         print("The user tapped Alright!!!")
      end
   },
},
})

local Window = Rayfield:CreateWindow({
   Name = " < üôà Monkey Hub üçå >",
   LoadingTitle = "Monkey Hub ",
   LoadingSubtitle = "Made By üôà SX üçå",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = true,
      Invite = "vkM7g9vRZq", -- The Discord invite code, do not include discord.gg/
      RememberJoins = false -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "  < üôà Monkey Hub üçå >",
      Subtitle = "",
      Note = "Join The Discord For Key!",
      FileName = "Monkey Hub Key",
      SaveKey = true,
      GrabKeyFromSite = false, -- If this is true, set Key below tdwdasdadadasdasdo the RAW site you would like Rayfield to get the key from
      Key = "Sx.sdnwad!@#daosij!@#skf123#&!$^*!@#&!$)(!@#&(*&$(*&@)(#&$2398749087iOHSFIOSHdf",
   }
})

local Tab = Window:CreateTab("üçå üôà  Farm! üóûÔ∏èüìàÔ∏è ", 111111) -- Title, Image

-- functions!!
function AutoCollect()
	while _G.AutoCollect == true do
			local args = { [1] = 10000000}game:GetService("ReplicatedStorage").GTycoonClient.Remotes.GrabDrops:FireServer(unpack(args))
		wait(.00000001)
	end
end

function AutoDeposit()
	while _G.AutoDeposit == true do
game:GetService("ReplicatedStorage").GTycoonClient.Remotes.DepositDrops:FireServer()
		wait(.01)
	end
end






local Section = Tab:CreateSection("Banana Farm")

local Toggle = Tab:CreateToggle({
   Name = "üçå Auto Collect Banana",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   	_G.AutoCollect = Value
   	AutoCollect()
   	 -- The function that takes place when the toggle is pressed  
   	-- The variable (Value) is a boolean on whether the toggle is true or false
   end,
})

local Toggle = Tab:CreateToggle({
   Name = "üçå Auto Deposit Banana",
   CurrentValue = false,
   Flag = "Toggle2", -- ag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   	_G.AutoDeposit = Value
   	AutoDeposit()
   	 -- The function that takes place when the toggle is pressed  
   	-- The variable (Value) is a boolean on whether the toggle is true or false
   end,
})


local Section = Tab:CreateSection("Monkey Stuff")

local Button = Tab:CreateButton({
   Name = "üôà Get One Monkey",
   Callback = function()
   	local args = { [1] = 1 } game:GetService("ReplicatedStorage").GTycoonClient.Remotes.BuyDropper:FireServer(unpack(args))
   end,
})

local Button = Tab:CreateButton({
   Name = "üêí Get Five Monkeys",
   Callback = function()
   	local args = { [1] = 5 } game:GetService("ReplicatedStorage").GTycoonClient.Remotes.BuyDropper:FireServer(unpack(args))
   end,
})

function AutoMonkey()
   while _G.AutoMonkey == true do
      local args = { [1] = 1 } game:GetService("ReplicatedStorage").GTycoonClient.Remotes.BuyDropper:FireServer(unpack(args))
      wait(.00000001)
   end
end
   



local Toggle = Tab:CreateToggle({
   Name = "üôà Auto Buy Monkeys",
   CurrentValue = false,
   Flag = "Toggle3", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   _G.AutoMonkey = Value  -- The function that takes place when the toggle is pressed
   AutoMonkey()-- The variable (Value) is a boolean on whether the toggle is true or false
   end,
})



local Section = Tab:CreateSection("Merge Farm üóûÔ∏è")

function AutoMerge()
	while _G.AutoMerge == true do
		game:GetService("ReplicatedStorage").GTycoonClient.Remotes.MergeDroppers:FireServer()
		wait(.01)
	end
end

local Toggle = Tab:CreateToggle({
   Name = "üóûÔ∏è Auto Merge All",
   CurrentValue = false,
   Flag = "Toggle4", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   _G.AutoMerge = Value  -- The function that takes place when the toggle is pressed
   AutoMerge()-- The variable (Value) is a boolean on whether the toggle is true or false
   end,
})



local Button = Tab:CreateButton({
   Name = "üóûÔ∏è Merge All",
   Callback = function()
   	game:GetService("ReplicatedStorage").GTycoonClient.Remotes.MergeDroppers:FireServer()
   end,
})



local args = {
    [1] = 1
}


local Section = Tab:CreateSection("Banana Luancher Farm ")

local Button = Tab:CreateButton({
   Name = " üìàÔ∏è Buy Rate ",
   Callback = function()
   	game:GetService("ReplicatedStorage").GTycoonClient.Remotes.BuySpeed:FireServer(unpack(args))
   end,
})

function AutoRate()
	while _G.AutoRate == true do
		game:GetService("ReplicatedStorage").GTycoonClient.Remotes.BuySpeed:FireServer(unpack(args))
		wait(.000000001)
	end
end

local Toggle = Tab:CreateToggle({
   Name = "üìâ Auto Buy Rate",
   CurrentValue = false,
   Flag = "Toggle5", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   _G.AutoRate = Value  -- The function that takes place when the toggle is pressed
   AutoRate()-- The variable (Value) is a boolean on whether the toggle is true or false
   end,
})






-- END OF FARM TAB!!!! GOOD JOB
local Tab = Window:CreateTab(" üì± Other üåê ", 1111111) -- Title, Image
local Section = Tab:CreateSection("Humanoid")


local Slider = Tab:CreateSlider({
   Name = "WalkSpeed",
   Range = {0, 100},
   Increment = 10,
   Suffix = "WalkSpeed",
   CurrentValue = 10,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   	game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = Value
   -- The function that takes place when the slider changes
   -- The variable (Value) is a number which correlates to the value the slider is currently at
   end,
})


local Tab = Window:CreateTab("üì±  Info üåê ", 1111111) -- Title, Image

local Paragraph = Tab:CreateParagraph({Title = "Info About The Script: ", Content = "Hello! I made this script just to have a little fun in a cool game monkey tycoon if you need help or want anything please lmk at SX. Insanity#0003 ( discord tag )"})
local Paragraph = Tab:CreateParagraph({Title = "Owners: ", Content = "There is only one owner! ( SX. Insanity#0003 )"})
local Paragraph = Tab:CreateParagraph({Title = "Thank you!: ", Content = "Im starting to make more scripts, Wich means i need help! Please tell your friends about the script and stuff like that."})
local Paragraph = Tab:CreateParagraph({Title = "Support?: ", Content = "If you need help with any or all scripts that i have made please lmk in the discord that was gave to u in the start when you executed it"})
